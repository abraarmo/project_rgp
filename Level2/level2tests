using Xunit;

public class PlayerTests
{
    [Fact]
    public void PlayerTakesDamage_LosesHealth()
    {
        var player = new Player(0, 0, 100, 25);
        player.TakeDamage(20);
        Assert.Equal(80, player.Health);
    }

    [Fact]
    public void PlayerAttack_ReturnsCorrectDamage()
    {
        var player = new Player(0, 0, 100, 25);
        int damage = player.Attack();
        Assert.Equal(25, damage);
    }

    [Fact]
    public void PlayerDies_WhenHealthIsZero()
    {
        var player = new Player(0, 0, 0, 25);
        Assert.False(player.IsAlive());
    }

    [Fact]
    public void PlayerMovesNorth_YCoordinateDecreases()
    {
        var player = new Player(0, 1, 100, 25);
        player.Move('N', 5, 5);
        Assert.Equal(0, player.Y);
    }

    [Fact]
    public void PlayerMovesEast_XCoordinateIncreases()
    {
        var player = new Player(0, 0, 100, 25);
        player.Move('E', 5, 5);
        Assert.Equal(1, player.X);
    }
}
